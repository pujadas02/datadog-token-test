name: Monitor Terraform and Azurerm Versions from TF Files

on:
  push:
    branches:
      - main
  workflow_dispatch:
  
jobs:
  monitor-versions:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Read Terraform Version from .tf file
        id: tf_version
        run: |
          echo "Main.tf content:"
          cat main.tf
          TF_VERSION=$(grep -oP 'required_version\s*=\s*"\K[^\"]+' main.tf)
          echo "Terraform version found: $TF_VERSION"
          if [ -z "$TF_VERSION" ]; then
            echo "Terraform version not found in main.tf"
            exit 1
          fi
          echo "TF_VERSION=$TF_VERSION" >> $GITHUB_ENV

      - name: Read Azurerm Provider Version from .tf file
        id: azurerm_version
        run: |
          echo "Main.tf content:"
          cat main.tf
          AZURERM_VERSION=$(grep -oP 'version\s*=\s*"\K[^\"]+' main.tf)
          echo "Azurerm version found: $AZURERM_VERSION"
          if [ -z "$AZURERM_VERSION" ]; then
            echo "Azurerm version not found in main.tf"
            exit 1
          fi
          echo "AZURERM_VERSION=$AZURERM_VERSION" >> $GITHUB_ENV
      - name: Send Azurerm Version to Datadog
        run: |
           AZURERM_VERSION="${{ env.AZURERM_VERSION }}"
           echo "Sending AZURERM_VERSION: $AZURERM_VERSION"  # Debugging step to print AZURERM_VERSION
           AZURERM_VERSION_NUMERIC=$(echo $AZURERM_VERSION | sed 's/~>//' | awk -F. '{ printf("%d%02d", $1,$2) }')
           echo "Numeric version: $AZURERM_VERSION_NUMERIC"
           curl -X POST \
            -H "Content-Type: application/json" \
            -H "DD-API-KEY: ${{ secrets.DATADOG_API_KEY }}" \
            -d '{
                  "series": [{
                  "metric": "azm.provider_version",
                  "points": [['"$(date +%s)"', '"$AZURERM_VERSION_NUMERIC"']],
                  "type": "gauge",
                  "tags": ["source:github", "status:version"]
                          }]
              }' \
           "https://api.us5.datadoghq.com/api/v1/series"
      - name: Send Terraform Version to Datadog
        run: |
            TF_VERSION="${{ env.TF_VERSION }}"
            echo "Sending TF_VERSION: $TF_VERSION"
            curl -X POST \
                       -H "Content-Type: application/json" \
                       -H "DD-API-KEY: ${{ secrets.DATADOG_API_KEY }}" \
                       -d '{
                             "series": [{
                               "metric": "terraform.cli.version",
                                "points": [['"$(date +%s)"', 1]],
                               "type": "gauge",
                               "tags": ["source:github", "version:$TF_VERSION"]
                                        }]
                           }' \
                         "https://api.us5.datadoghq.com/api/v1/series"

      - name: Send Terraform Version to Datadog
        run: |
          TF_VERSION="${{ env.TF_VERSION }}"
          echo "Sending TF_VERSION: $TF_VERSION"  # Debugging step to print TF_VERSION
          TF_VERSION_NUMERIC=$(echo $TF_VERSION | sed 's/^[^0-9]*//g' | awk -F. '{ printf("%d%02d", $1,$2) }')
          echo "Numeric version: $TF_VERSION_NUMERIC"
          curl -X POST \
                  -H "Content-Type: application/json" \
                  -H "DD-API-KEY: ${{ secrets.DATADOG_API_KEY }}" \
                  -d '{
                     "series": [{
                     "metric": "form.cli.version",
                     "points": [['"$(date +%s)"', '"$TF_VERSION_NUMERIC"']],
                     "type": "gauge",
                     "tags": ["source:github", "status:version"]
                              }]
                      }' \
                  "https://api.us5.datadoghq.com/api/v1/series"
