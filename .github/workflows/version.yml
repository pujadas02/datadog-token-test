name: Terraform Version Monitoring

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  terraform:
    name: Run Terraform and Report Version
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "latest"
          terraform_wrapper: false

      - name: Initialize Terraform
        run: terraform init

      - name: Fetch Terraform Version
        id: get-tf-version
        run: |
          TF_VERSION=$(terraform version -json | jq -r '.terraform_version')
          echo "Terraform version: $TF_VERSION"
          echo "TF_VERSION=$TF_VERSION" >> $GITHUB_ENV

      # - name: Fetch azurerm Provider Version
      #   id: get-azurerm-version
      #   run: |
      #     AZURERM_VERSION=$(grep 'provider "registry.terraform.io/hashicorp/azurerm"' -A 5 .terraform.lock.hcl | grep version | awk '{print $3}' | tr -d '"')
      #     echo "AzureRM version: $AZURERM_VERSION"
      #     echo "AZURERM_VERSION=$AZURERM_VERSION" >> $GITHUB_ENV

      - name: Send Terraform and Azurerm Version Tags to Datadog
        run: |
         AZURERM_VERSION=$(grep 'provider "registry.terraform.io/hashicorp/azurerm"' -A 5 .terraform.lock.hcl | grep version | awk '{print $3}' | tr -d '"')
          curl -X POST \
            -H "Content-Type: application/json" \
            -H "DD-API-KEY: ${{ secrets.DATADOG_API_KEY }}" \
            -d "{
              \"series\": [{
                \"metric\": \"rsions\",
                \"points\": [[\"$(date +%s)\", 0]],
                \"type\": \"gauge\",
                \"tags\": [
                  \"repo:${{ github.repository }}\", \"pipeline:${{ github.workflow }}\", \"terraform_version:${TF_VERSION}\", \"azurerm_version:${AZURERM_VERSION}\" ]
              }]
            }" \
            "https://api.us5.datadoghq.com/api/v1/series"
