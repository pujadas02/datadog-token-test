name: Monitor GitHub Token Expiry

on:
  schedule:
    - cron: '0 0 * * *'  
  workflow_dispatch: 

jobs:
  check-token-expiry:
    runs-on: ubuntu-latest

    steps:
      - name: Check GitHub Token Expiry
        run: |
          GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          EXPIRATION_DATE="2025-03-16T00:00:00Z"  
          EXPIRATION_TIMESTAMP=$(date -d "$EXPIRATION_DATE" +%s)
          CURRENT_TIMESTAMP=$(date +%s)
          DAYS_UNTIL_EXPIRY=$((($EXPIRATION_TIMESTAMP - $CURRENT_TIMESTAMP) / 86400))
          echo "Github USER_READONLY_TOKEN is going to expire in $DAYS_UNTIL_EXPIRY days."
          curl -X POST \
            -H "Content-Type: application/json" \
            -H "DD-API-KEY: ${{ secrets.DATADOG_API_KEY }}" \
            -d '{
                  "series": [{
                  "metric": "github.token.expiry.days_left",
                  "points": [['"$(date +%s)"', '"$DAYS_UNTIL_EXPIRY"']],
                  "type": "gauge",
                  "tags": ["source:github", "status:expiry_warning"]
                          }]
              }' \
           "https://api.us3.datadoghq.com/api/v1/series"

# name: Monitor GitHub Token Expiry

# on:
#   schedule:
#   - cron: '0 0 * * *'  # Runs daily at midnight UTC
#   workflow_dispatch:  # Allows manual triggering of the workflow from GitHub UI

# jobs:
#   check-token-expiry:
#     runs-on: ubuntu-latest
    
#     steps:
#       - name: Check GitHub Token Expiry for PUJA_1
#         run: |
#           GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
#           EXPIRATION_DATE_1="2025-03-16T00:00:00Z"  # Token 1 expiration date
#           EXPIRATION_TIMESTAMP_1=$(date -d "$EXPIRATION_DATE_1" +%s)
#           DAYS_UNTIL_EXPIRY_1=$((($EXPIRATION_TIMESTAMP_1 - $CURRENT_TIMESTAMP) / 86400))
#           echo "Github PUJA_1 is going to expire in $DAYS_UNTIL_EXPIRY_1 days."

#           curl -X POST \
#             -H "Content-Type: application/json" \
#             -H "DD-API-KEY: ${{ secrets.DATADOG_API_KEY }}" \
#             -d '{
#                   "series": [{
#                   "metric": "github.1st.token.expiry.days_left",
#                   "points": [['"$(date +%s)"', '"$DAYS_UNTIL_EXPIRY_1"']],
#                   "type": "gauge",
#                   "tags": ["source:github", "token:puja_1", "status:expiry_warning"]
#                           }]
#               }' \
#            "https://api.datadoghq.com/api/v1/series"

      # - name: Check GitHub Token Expiry for PUJA_2
      #   run: |
      #     GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
      #     EXPIRATION_DATE_2="2025-04-15T00:00:00Z"  # Token 2 expiration date
      #     EXPIRATION_TIMESTAMP_2=$(date -d "$EXPIRATION_DATE_2" +%s)
      #     DAYS_UNTIL_EXPIRY_2=$((($EXPIRATION_TIMESTAMP_2 - $CURRENT_TIMESTAMP) / 86400))
      #     echo "Github PUJA_2 is going to expire in $DAYS_UNTIL_EXPIRY_2 days."

      #     curl -X POST \
      #       -H "Content-Type: application/json" \
      #       -H "DD-API-KEY: ${{ secrets.DATADOG_API_KEY }}" \
      #       -d '{
      #             "series": [{
      #             "metric": "github.2nd.token.expiry.days_left",
      #             "points": [['"$(date +%s)"', '"$DAYS_UNTIL_EXPIRY_2"']],
      #             "type": "gauge",
      #             "tags": ["source:github", "token:puja_2", "status:expiry_warning"]
      #                     }]
      #         }' \
      #      "https://api.datadoghq.com/api/v1/series"

            #       "title": "GitHub Token Expiry Warning",
            #       "text": "Token expires in '"$DAYS_UNTIL_EXPIRY"' days kunmun    here .",
                  # "tags": ["token:github", "status:expiry_warning", "expiry:'"$DAYS_UNTIL_EXPIRY"' days"],
            #       "priority": "normal"
            #     }' \
            # "https://api.datadoghq.com/api/v1/events"

      
