name: Monitor GitHub Token Expiry

on:
  schedule:
  - cron: '46 8 * * *'  # 8:46 AM UTC (equivalent to 2:22 PM IST)

# Step 1: Convert Local Time to UTC
# Local time: 2:22 PM IST (India Standard Time).
# UTC offset: India Standard Time (IST) is UTC +5:30.
# To convert 2:22 PM IST to UTC, subtract 5 hours and 30 minutes:
# 2:22 PM IST → 8:52 AM UTC.
# Step 2: Account for the 6-Minute Delay
# Based on your previous observation, the workflow was running about 6 minutes later than expected. To account for this delay, we'll adjust the cron expression 6 minutes earlier.
# 8:52 AM UTC → Adjusted to 8:46 AM UTC.


  workflow_dispatch:  # Allows manual triggering of the workflow from GitHub UI

jobs:
  check-token-expiry:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check GitHub Token Expiry
        run: |
          # Use the GitHub token stored in GitHub Secrets
          GITHUB_TOKEN=${{ secrets.MY_GITHUB_TOKEN }}  # Reference your stored GitHub Token
          
          # GitHub token expiration date (stored as a GitHub secret)
          EXPIRATION_DATE=${{ secrets.PGITHUB_TOKEN_EXPIRY_DATE }}  # Corrected secret name here
          
          # Convert the expiration date to Unix timestamp (in seconds)
          EXPIRATION_TIMESTAMP=$(date -d "$EXPIRATION_DATE" +%s)
          CURRENT_TIMESTAMP=$(date +%s)
          
          # Calculate how many days until token expiry
          DAYS_UNTIL_EXPIRY=$((($EXPIRATION_TIMESTAMP - $CURRENT_TIMESTAMP) / 86400))
          
          echo "Token expires in $DAYS_UNTIL_EXPIRY days."
          curl -X POST \
            -H "Content-Type: application/json" \
            -H "DD-API-KEY: ${{ secrets.DATADOG_API_KEY }}" \
            -d '{
                  "title": "GitHub Token Expiry Warning",
                  "text": "Token expires in '"$DAYS_UNTIL_EXPIRY"' days kunmun    here .",
                  "tags": ["token:github", "status:expiry_warning"],
                  "priority": "normal"
                }' \
            "https://api.datadoghq.com/api/v1/events"

          # # Step 2: Check if the token is expiring within the next 7 days
          # if [ "$DAYS_UNTIL_EXPIRY" -le 7 ]; then
          #   echo "Token is expiring soon! Sending alert to Datadog."
            
          #   # Send a custom Datadog event about the token expiry
          #   curl -X POST \
          #     -H "Content-Type: application/json" \
          #     -H "DD-API-KEY: ${{ secrets.DATADOG_API_KEY }}" \
          #     -d '{
          #           "title": "GitHub Token Expiry Warning",
          #           "text": "The GitHub token will expire in '"$DAYS_UNTIL_EXPIRY"' days. Please renew it soon.",
          #           "tags": ["token:github", "status:expiry_warning"],
          #           "priority": "normal"
          #         }' \
          #     "https://api.datadoghq.com/api/v1/events"
          # else
          #   echo "Token is valid for $DAYS_UNTIL_EXPIRY days. No action needed."
          # fi
